<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <Description>Blazor Runtime Components for CS2 Launcher.</Description>
    <EnablePostCSSTransform>true</EnablePostCSSTransform>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
    <IsAotCompatible>true</IsAotCompatible>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <StaticWebAssetProjectMode>Default</StaticWebAssetProjectMode>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="$(AspNetCoreVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="$(AspNetCoreVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Protocols.MessagePack" Version="$(AspNetCoreVersion)" />
  </ItemGroup>

  <ItemGroup>
    <SupportedPlatform Include="browser" />

    <None Include="$(SourceDirectory)..\README.md" Pack="true" PackagePath="\" />
    <None Update="_Imports.razor.css" CssScope="_" />
    <Content Remove="*.config.js" />

    <Content Include="build\*.props" Pack="true" PackagePath="build\" />
  </ItemGroup>

  <Target Name="RestoreNpmPackages" AfterTargets="PrepareForBuild;Restore" BeforeTargets="BeforeBuild" Condition=" '$(EnablePostCSSTransform)' == 'true' ">
    <!-- The project contains a `package.json`, but not a `package-lock.json` -->
    <Exec Command="npm i" WorkingDirectory="$(MSBuildProjectDirectory)" Condition="!Exists('$(MSBuildProjectDirectory)\package-lock.json') AND Exists('$(MSBuildProjectDirectory)\package.json') AND !Exists('$(MSBuildProjectDirectory)\node_modules\.package-lock.json')" />

    <!-- The project contains a `package.json` AND `package-lock.json` -->
    <Exec Command="npm ci" WorkingDirectory="$(MSBuildProjectDirectory)" Condition="Exists('$(MSBuildProjectDirectory)\package-lock.json') AND Exists('$(MSBuildProjectDirectory)\package.json') AND !Exists('$(MSBuildProjectDirectory)\node_modules\.package-lock.json')" />
  </Target>

  <Target Name="TransformScopedCssBundle" AfterTargets="BundleScopedCssFiles" Condition=" '$(EnablePostCSSTransform)' == 'true' ">
    <PropertyGroup>
      <_ScopedCssBundle>$(ProjectDir)obj\$(ConfigurationName)\$(TargetFramework)\scopedcss\projectbundle\$(ProjectName).bundle.scp.css</_ScopedCssBundle>
      <!-- <_ScopedCssBundle Condition=" '$(UsingMicrosoftNETSdkBlazorWebAssembly)' == 'true' ">$(ProjectDir)obj\$(ConfigurationName)\$(TargetFramework)\scopedcss\bundle\$(ProjectName).styles.css</_ScopedCssBundle> -->

      <_CrossEnvArguments>MSBUILD_PROJECT_DIR='$(MSBuildProjectDirectory)'</_CrossEnvArguments>

      <_PostCssArguments>$(_ScopedCssBundle) -r --config . --verbose</_PostCssArguments>
      <_PostCssArguments Condition=" '$(Configuration)' == 'Release' ">$(_PostCssArguments) --env production --no-map</_PostCssArguments>
    </PropertyGroup>

    <Exec Command="npx cross-env $(_CrossEnvArguments) postcss $(_PostCssArguments)" WorkingDirectory="$(MSBuildProjectDirectory)" Condition="Exists('$(_ScopedCssBundle)')" />
  </Target>

</Project>
