<i @attributes="@AdditionalAttributes" class="@ClassNames.Combine(AdditionalAttributes, ToCssClass(Size), Filled ? "filled" : string.Empty)">@Name</i>

@code {

    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; init; }

    [Parameter]
    public bool Filled { get; init; } = true;

    [EditorRequired]
    [Parameter]
    public IconName Name { get; set; } = default!;

    [Parameter]
    public IconSize Size { get; init; } = IconSize.Base;

    private static string ToCssClass(IconSize size) => size switch
    {
        IconSize.ExtraSmall => "text-xs",
        IconSize.Small => "text-sm",
        IconSize.Base => "text-base",
        IconSize.Large => "text-lg",
        IconSize.ExtraLarge => "text-xl",
        IconSize.ExtraLarge2 => "text-2xl",
        IconSize.ExtraLarge3 => "text-3xl",
        IconSize.ExtraLarge4 => "text-4xl",
        IconSize.ExtraLarge5 => "text-5xl",
        IconSize.ExtraLarge6 => "text-6xl",
        IconSize.ExtraLarge7 => "text-7xl",
        IconSize.ExtraLarge8 => "text-8xl",
        IconSize.ExtraLarge9 => "text-9xl",
        _ => "text-base"
    };

}