<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
    <Description>A .NET Generic Host Builder for running CS2 Dedicated Servers.</Description>
    <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
    <None Include="$(SourceDirectory)..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.HealthChecks.ApplicationStatus" Version="8.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Server" Version="$(AspNetCoreVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\App\CS2Launcher.AspNetCore.App.csproj" Private="false" />
    <ProjectReference Include="..\..\modules\CoreRcon\src\CoreRCON.Extensions.CounterStrike\CoreRCON.Extensions.CounterStrike.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net8.0' ">
    <PackageReference Include="AspNet.Security.OpenId.Steam" Version="8.0.0" />

    <!-- NOTE: force transitive deps of CoreRCON, since `PrivateAssets` is used to prevent generated a dependency key on nuget -->
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="8.0.1" />
    <PackageReference Include="System.IO.Pipelines" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net9.0' ">
    <PackageReference Include="AspNet.Security.OpenId.Steam" Version="9.0.0-rc.2.24509.43" />

    <!-- NOTE: force transitive deps of CoreRCON, since `PrivateAssets` is used to prevent generated a dependency key on nuget -->
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="9.0.0-rc.*" />
    <PackageReference Include="System.IO.Pipelines" Version="9.0.0-rc.*" />
  </ItemGroup>

  <Target DependsOnTargets="BuildOnlySettings;ResolveReferences" Name="CopyProjectReferencesToPackage">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))"/>
    </ItemGroup>
  </Target>

</Project>
